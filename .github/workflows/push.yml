name: icon-automation
on:
  push:
    branches:
    - main
    # file paths to consider in the event. Optional; defaults to all.
    paths:
      - package.json

jobs:
  icon_automation:
    name: figma icon automation
    runs-on: ubuntu-latest
    strategy:
      matrix:
      node-version: [12.x]
    steps:
   - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn --immutable
      if: steps.restore-cache.outputs.cache-hit != 'true'

# fetch figma
    - name: Figma Action
      uses: primer/figma-action@v1.0.0-alpha.2
      with:
        args: "format=svg outputDir=./src/"
      env:
        FIGMA_FILE_URL: ${{ secrets.FIGMA_FILE_URL }}
        FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
   

# build
   - name: Build Packages
      run: BASE_PATH=/react-icons ./build.sh
    - uses: actions/upload-artifact@v2
      with:
        path: packages/_react-icons_*/*.tgz
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./packages/preview/out
      if: github.ref == 'refs/heads/main'



# publish
    # - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc
    # - run: yarn publish
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    # - run: yarn build

    - run: yarn build

# deploy pages
    - name: GitHub Pages
      uses: crazy-max/ghaction-github-pages@v1.2.5
      with:
        build_dir: docs
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
